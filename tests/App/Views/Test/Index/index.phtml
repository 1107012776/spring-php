<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>学习交流</title>
    <script src="https://www.developzhe.com/admin_static/plugins/jQuery/jquery-2.2.3.min.js"></script>
    <style>
        html,body{margin:0;padding:0;font-size:13px}
        .left{width: 20%;height: 600px;border: 1px solid #ddd;float: left;}
        .right{width: 79.7%;height: 400px;border: 1px solid #ddd;border-left: 0px;float: left;overflow: auto;}
        .bottom{width: 79.7%;height: 199px;border: 1px solid #ddd;border-left: 0px;border-top: 0px;float: left;}
        #content{width: 99.5%;height: 165px;}
        .blue{color:blue}
        .red{color:red}
        .div_left{width:100%;float:left}
        .div_right{width:100%;float:left;text-align: right;}
        .div_centent{width:100%;float:left;text-align: center;}
    </style>
</head>
<body>
<div id="USER"></div>
<div class="left">
    <ul>
    </ul>
</div>
<div class="right">
</div>
<div class="bottom">
    <textarea id="content"></textarea>
    <button type="button" id="submit">发送消息</button>
</div>
<div id="error"></div>

</body>
</html>
<script>
    // 生成一个唯一ID，假设这是userID
    var USER_ID = "static" + Math.round(Math.random() * 10000);
    $('#USER').html('您的USER_ID为：'+USER_ID);
    var lockReconnect = false; // 正常情况下我们是关闭心跳重连的
    if(document.location.protocol === 'https:'){
        var wsServer = 'wss://live.developzhe.com:{{$port}}';
    }else{
        var wsServer = 'ws://live.developzhe.com:{{$port}}';
    }
    var websocket;
    var time;
    createWebSocket();
    // ①开启WebSocket
    function createWebSocket() {
        try {
            websocket = new WebSocket(wsServer);
            init();
        } catch(e) {
            reconnect(wsUrl);
        }
    }
    // ②初始化WebSocket，并设置心跳检测
    function init() {
        // 接收Socket断开时的消息通知
        websocket.onclose = function(evt) {
            try {
                $("#"+USER_ID+' span').removeClass('blue');
                $("#"+USER_ID+' span').addClass('red');
                $("#"+USER_ID+' span').html('离线');
            }catch (e) {
                console.log(e);
            }
            $('#error').append('<p class="red">Socket断开了...正在试图重新连接...</p>');
            reconnect(wsServer);
        };
        // 接收Socket连接失败时的异常通知
        websocket.onerror = function(e){
            $('#error').append('<p class="red">Socket断开了...正在试图重新连接...</p>');
            reconnect(wsServer);
        };
        // 连接成功
        websocket.onopen = function (evt) {
            $('#error').append('<p class="blue">握手成功，打开socket连接了。。。</p>');
            var data = {
                'content':{
                    'code':1, // 我们假设code为4时，既为心跳检测
                    "content":content,
                    "user_id":USER_ID
                },
                'uri':"/Index/websocket"
            };
            // 前端发送json前，必须先转义成字符串
            data = JSON.stringify(data);
            try{
                websocket.send(data);
                // 心跳检测重置
                heartCheck.start();
            }catch (e) {

            }
        };
        var message = '';
        var flag    = true;
        function userList(obj){
            if(obj.is_online == false){
                if ($("#"+obj.user_id).length>0) {
                    $("#" + obj.user_id + ' span').removeClass('blue');
                    $("#" + obj.user_id + ' span').addClass('red');
                    $("#" + obj.user_id + ' span').html('(离线)');
                } else {
                    $('.left ul').append('<li id="'+obj.user_id+'">'+obj.user_id+' <span class="red">(离线)</span></li>');
                }
            }else{
                if ($("#"+obj.user_id).length>0) {
                    /*        $("#"+obj.user_id+' span').removeClass('blue');
                            $("#"+obj.user_id+' span').addClass('red');
                            $("#"+obj.user_id+' span').html('离线');*/
                    $("#"+obj.user_id+' span').removeClass('red');
                    $("#"+obj.user_id+' span').addClass('blue');
                    $("#"+obj.user_id+' span').html('(在线)');
                    // 不存在，添加用户列表
                } else {
                    $('.left ul').append('<li id="'+obj.user_id+'">'+obj.user_id+' <span class="blue">(在线)</span></li>');
                }
            }
        }
        // 接收服务端广播的消息通知
        websocket.onmessage = function(evt){
            heartCheck.start();
            var obj = JSON.parse(evt.data);
            // 登录广播
            if (obj.code == 1) {
                // 存在修改上线状态
                if ($("#"+obj.user_id).length>0) {
            /*        $("#"+obj.user_id+' span').removeClass('blue');
                    $("#"+obj.user_id+' span').addClass('red');
                    $("#"+obj.user_id+' span').html('离线');*/
                    $("#"+obj.user_id+' span').removeClass('red');
                    $("#"+obj.user_id+' span').addClass('blue');
                    $("#"+obj.user_id+' span').html('(在线)');
                    // 不存在，添加用户列表
                } else {
                    $('.left ul').append('<li id="'+obj.user_id+'">'+obj.user_id+' <span class="blue">(在线)</span></li>');
                }
                $('.right').append('<div class="div_centent">'+obj.content+'</div>');

                // 下线广播
            } else if (obj.code == 2) {
                $("#"+obj.user_id+' span').removeClass('blue');
                $("#"+obj.user_id+' span').addClass('red');
                $("#"+obj.user_id+' span').html('(离线)');
                $('.right').append('<div class="div_centent">'+obj.content+'</div>');
                // 聊天消息广播
            } else if (obj.code == 3) {
                $('.right').append('<div class="div_left">'+obj.user_id+'：'+obj.content+'</div>');
                // 聊天界面默认自动底部
                $('.right').scrollTop( $('.right')[0].scrollHeight );
                // 如果是心跳检测的广播就不做任何操作
            } else if (obj.code == 4){
                for(x in obj.user_list){
                    userList(obj.user_list[x]);
                }
                return false;
            }
        };
    }
    // ③ 掉线重连
    function reconnect(url) {
        if(lockReconnect) {
            return;
        };
        lockReconnect = true;
        // 没连接上会一直重连，设置心跳延迟避免请求过多
        time && clearTimeout(time);
        time = setTimeout(function () {
            createWebSocket(url);
            lockReconnect = false;
        }, 5000);
    }
    // ④心跳检测
    var heartCheck = {
        timeout: 5000,
        timeoutObj: null,
        serverTimeoutObj: null,
        start: function() {
            var self = this;
            this.timeoutObj && clearTimeout(this.timeoutObj);
            this.serverTimeoutObj && clearTimeout(this.serverTimeoutObj);
            this.timeoutObj = setTimeout(function(){
                // 这里发送一个心跳，后端收到后，返回一个心跳消息，
                // onmessage拿到返回的心跳就说明连接正常
                var data = {
                    'content':{
                        'code':4, // 我们假设code为4时，既为心跳检测
                        "content":content,
                        "user_id":USER_ID
                    },
                    'uri':"/Index/websocket"
                };
                // 前端发送json前，必须先转义成字符串
                data = JSON.stringify(data);
                websocket.send(data);
            }, this.timeout)
        }
    }
    // 点击发送消息按钮
    $('#submit').click(function(){
        var content = $('#content').val();
        $('.right').append('<div class="div_right">'+content+'：'+USER_ID+'</div>');
        // var data =  '{"uri":"/Index/index","code":3,"content":{"name":"'+content+'"},"user_id":"'+USER_ID+'"}';
        var data = {
            'content':{
                'code':3, // 我们假设code为3时，既为聊天消息广播请求
                "content":content,
                "user_id":USER_ID
            },
            'uri':"/Index/websocket"
        };
        // 前端发送json前，必须先转义成字符串
        data = JSON.stringify(data);
        websocket.send(data);
        // 输入表单清空
        $('#content').val('');
        // 聊天界面默认自动底部
        $('.right').scrollTop( $('.right')[0].scrollHeight );
    });
</script>